#!/usr/bin/env python3
"""
Exemple de test pour montrer le formatage markdown
"""

import requests
import json

def test_markdown_formatting():
    """Test du formatage markdown"""
    
    print("üé® **Test du Formatage Markdown**")
    print("=" * 50)
    
    # Exemple de question qui devrait g√©n√©rer un tableau bien format√©
    questions = [
        "Pourrais-tu me fournir la liste des √©quipements sous forme de tableau ?",
        "Montre-moi les ordres de maintenance ouverts",
        "Liste toutes les notifications avec leurs statuts"
    ]
    
    for i, question in enumerate(questions, 1):
        print(f"\n{i}. Question: {question}")
        print("-" * 40)
        
        try:
            response = requests.post(
                "http://localhost:5000/api/chat",
                json={"message": question},
                timeout=30
            )
            
            if response.status_code == 200:
                data = response.json()
                
                print("‚úÖ **R√©ponse format√©e :**")
                print("```markdown")
                print(data.get('message', 'Aucune r√©ponse'))
                print("```")
                
                print(f"\nüìä Agents utilis√©s: {', '.join(data.get('agents_used', []))}")
                print(f"‚è±Ô∏è Temps de r√©ponse: {data.get('response_time', 0):.2f}s")
                
            else:
                print(f"‚ùå Erreur HTTP: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå Erreur: {str(e)}")

def show_markdown_example():
    """Affiche un exemple de markdown bien format√©"""
    
    example_markdown = """
## üè≠ Liste des √âquipements

Voici la liste compl√®te des √©quipements disponibles dans le syst√®me de maintenance :

| ID | Nom | Description | Asset ID | Centre de Co√ªt |
|----|-----|-------------|----------|----------------|
| df261fe9-66a5-4ab3-b580-de0177d34e33 | Pompe Centrifuge P-001 | Pompe principale du circuit de refroidissement | ASSET001 | CC001 |
| fef85973-f19d-4001-923d-cf1b71882c91 | Moteur √âlectrique M-001 | Moteur principal de production | ASSET002 | CC002 |
| edfb427d-7981-423c-8b98-fcabe84eb21f | R√©servoir Stockage R-001 | R√©servoir principal de stockage | ASSET003 | CC003 |

üìä **R√©sum√© des donn√©es :**
- **Total d'√©quipements :** 3
- **Centres de co√ªt actifs :** CC001, CC002, CC003
- **Types d'√©quipements :** Pompes, Moteurs, R√©servoirs

üîß **Informations techniques :**
- Tous les √©quipements sont op√©rationnels
- Maintenance pr√©ventive programm√©e
- Capteurs IoT connect√©s

‚úÖ **Source :** Donn√©es r√©cup√©r√©es avec succ√®s via le serveur MCP et organis√©es selon votre demande.
"""
    
    print("üìù **Exemple de Markdown Bien Format√©**")
    print("=" * 50)
    print(example_markdown)

if __name__ == "__main__":
    print("üöÄ Test du formatage markdown...")
    print()
    
    # Afficher l'exemple
    show_markdown_example()
    
    print("\n" + "="*60 + "\n")
    
    # Tester avec l'API r√©elle
    test_markdown_formatting()
    
    print("\n‚úÖ Test termin√©!") 